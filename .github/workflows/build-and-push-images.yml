name: Build and Push Images

on:
  push:
    branches: [ main ]
    tags: [ v* ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DO_NOT_TRACK: "1"

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Downloaded Packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/debco
        key: ${{ runner.os }}-debco-cache
        restore-keys: |
          ${{ runner.os }}-debco-cache

    - name: Install Debco
      run: |
        sudo curl -fsL -o /etc/apt/keyrings/apt-dpeckett-dev-keyring.asc https://apt.dpeckett.dev/signing_key.asc \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/apt-dpeckett-dev-keyring.asc] http://apt.dpeckett.dev bookworm stable" | sudo tee /etc/apt/sources.list.d/apt-dpeckett-dev.list \
        && sudo apt update \
        && sudo apt install -y debco

    - name: Check Out Repo
      uses: actions/checkout@v3

    - name: Build Bookworm Images
      run: |
        for recipe in $(find . -name 'bookworm*.yaml'); do
          base_name=$(basename "$recipe" .yaml)
          debco build -p linux/amd64,linux/arm64 -o "${base_name}.tar" -f "$recipe"
        done

    - name: Build Trixie Images
      run: |
        for recipe in $(find . -name 'trixie*.yaml'); do
          base_name=$(basename "$recipe" .yaml)
          debco build -p linux/amd64,linux/arm64,linux/riscv64 -o "${base_name}.tar" -f "$recipe"
        done
    
    - name: Save Images
      uses: actions/upload-artifact@v4
      with:
        name: built-images
        path: |
          bookworm*.tar
          trixie*.tar

  push:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    env:
      DO_NOT_TRACK: "1"

    steps:
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.x'

    # The version in apt is too old, so we need to build from source.
    - name: Install Skopeo
      run: |
        VERSION=1.16.1
        curl -fsL https://github.com/containers/skopeo/archive/refs/tags/v${VERSION}.tar.gz | tar -xzf -
        cd skopeo-${VERSION}
        DISABLE_DOCS=1 make
        sudo make install

    - name: Download Built Images
      uses: actions/download-artifact@v4
      with:
        name: built-images

    - name: Login to Registry
      env:
        REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      run: echo $REGISTRY_PASSWORD | docker login -u github-actions --password-stdin registry.dpeckett.dev
        
    - name: Push Images
      run: |
        for image in $(find . -name '*.tar'); do
          skopeo copy --multi-arch all "oci-archive:${image}" "docker://registry.dpeckett.dev/debian:$(basename "$image" .tar)"
        done
  
    - name: Calculate Digests
      run: |
        for image in $(find . -name '*.tar'); do
          skopeo inspect "oci-archive:${image}" | jq -j '.Digest' >> digests.txt
          echo "  registry.dpeckett.dev/debian:$(basename "$image" .tar)" >> digests.txt
        done

    - name: Publish Digests
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          digests.txt